#!/usr/bin/php
<?php
define('CAK',32);define('CAL',255);define('CAM',47);define('CAN',122);class Cryptor{private $vh=['e'=>'encrypt','d'=>'decrypt'];private $vi=__FILE__;private $vj='';private $vk='';private $vl='';public function __construct($vm){$this->vi=$vm[0];$this->vj=trim(strtolower($vm[1]));$this->vk=$vm[2];if(isset($vm[3])){$this->vl=$vm[3];}if($this->fc()){if(file_put_contents($this->vl,$this->fa())){$this->fg("\nFinished.");}else{$this->fg("Failed writing to file: '{$this->vl}'!");}}else{$this->ff();die();}}private function fa(){$vn=file_get_contents($this->vk);$vo='';$vp=md5($this->fe('Enter key: '));$vq=CAM-CAK;$vr=CAL-(CAN-CAK);switch($this->vj){case'encrypt':$vs=str_split(base64_encode($vn));$vt=count($vs);foreach($vs as $vu=>$vv){$vw=ord($vv);$vw-=$vq;foreach(str_split($vp)as $vx=>$vy){$vz=ord($vy);$vaa=$vz%$vr;$vw+=$vaa;$vw-=($vx%$vaa);if($vx%2==0){$vw-=($vu%$vaa);}else{$vw+=($vu%$vaa);}}$vab=round((($vu+1)/ $vt)*100,0);$this->fg("Encrypting [$vab%]",true);$vo.=chr($vw);}break;case'decrypt':$vs=str_split($vn);$vt=count($vs);foreach($vs as $vu=>$vv){$vw=ord($vv);$vw+=$vq;foreach(str_split($vp)as $vx=>$vy){$vz=ord($vy);$vaa=$vz%$vr;$vw-=$vaa;$vw+=($vx%$vaa);if($vx%2==0){$vw+=($vu%$vaa);}else{$vw-=($vu%$vaa);}}$vab=round((($vu+1)/ $vt)*100,0);$this->fg("Decrypting [$vab%]",true);$vo.=chr($vw);}$vo=base64_decode($vo);break;}return $vo;}private function fb($vp){$vac=0;$vad=str_split($vp);foreach($vad as $vu=>$vy){$vac+=ord($vy);}return $vac;}private function fc(){$vae=true;if(isset($this->vh[$this->vj])){$this->vj=$this->vh[$this->vj];}if(!in_array($this->vj,$this->vh)){$this->fg("Invalid <action>: '{$this->vj}'!");$vae=false;}if(!file_exists($this->vk)){$this->fg("Input file: '{$this->vk}' does not exist!");$vae=false;}if(file_exists($this->vl)){$this->fg("WARNING: Output file: '{$this->vl}' already exists!");if(!$this->fd('Overwrite this file?')){$vae=false;}}else if($vae&&$this->vl==''){$this->vl=$this->vk;}return $vae;}private function fd($vaf='Are you sure?'){$vag=['y','n','yes','no'];do{$this->fg($vaf);echo'(y/n): ';$vah=trim(strtolower(fgets(STDIN)));}while(!in_array($vah,$vag));return($vah=='y'||$vah=='yes');}private function fe($vaf='Enter value: '){echo $vaf;return trim(fgets(STDIN));}private function ff(){$this->fg("Usage: {$this->vi} <action (encrypt|decrypt)> <input file> [<output file>]");}private function fg($vaf,$vai=false){if($vai){echo"\r$vaf";}else{echo"$vaf\n";}}}$vaj=new Cryptor($argv);